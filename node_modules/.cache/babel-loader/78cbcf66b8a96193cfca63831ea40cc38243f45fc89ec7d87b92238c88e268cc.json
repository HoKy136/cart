{"ast":null,"code":"import { GET_NUMBER_CART, ADD_CART } from \"../Actions/Actions\";\nconst initialState = {\n  data: [],\n  numberCart: 0,\n  Carts: [],\n  count: 1\n};\nexport function ReduxProduct() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"API_CALL_SUCCESS\":\n      return {\n        ...state,\n        data: action.payload\n      };\n    case GET_NUMBER_CART:\n      return {\n        ...state\n      };\n    case ADD_CART:\n      if (state.numberCart == 0) {\n        let cart = {\n          name: action.payload.productId\n        };\n        state.Carts.push(cart);\n        console.log(state.Carts);\n        return {\n          ...state,\n          numberCart: state.numberCart + 1\n        };\n      }\n    // case ADD_CART:\n    //   if (state.numberCart == 0) {\n    //     let cart = {\n    //       id: action.payload.id,\n    //       quantity: 1,\n    //       name: action.payload.name,\n    //       image: action.payload.image,\n    //       price: action.payload.price,\n    //     };\n    //     state.Carts.push(cart);\n    //   } else {\n    //     let check = false;\n    //     state.Carts.map((item, key) => {\n    //       if (item.id == action.payload.id) {\n    //         state.Carts[key].quantity++;\n    //         check = true;\n    //       }\n    //     });\n    //     if (!check) {\n    //       let _cart = {\n    //         id: action.payload.id,\n    //         quantity: 1,\n    //         name: action.payload.name,\n    //         image: action.payload.image,\n    //         price: action.payload.price,\n    //       };\n    //       state.Carts.push(_cart);\n    //     }\n    //   }\n    //   return {\n    //     ...state,\n    //     numberCart: state.numberCart + 1,\n    //   };\n\n    default:\n      return state;\n  }\n}\n_c = ReduxProduct;\nvar _c;\n$RefreshReg$(_c, \"ReduxProduct\");","map":{"version":3,"names":["GET_NUMBER_CART","ADD_CART","initialState","data","numberCart","Carts","count","ReduxProduct","state","action","type","payload","cart","name","productId","push","console","log"],"sources":["D:/Hoc/Workspace/Frontend/MockProject/ShoppingCart/cart/src/db/Redux/Reducers/ReduxProduct.js"],"sourcesContent":["import {\r\n  GET_NUMBER_CART,\r\n  ADD_CART,\r\n} from \"../Actions/Actions\";\r\nconst initialState = {\r\n  data: [],\r\n  numberCart: 0,\r\n  Carts: [],\r\n  count : 1,\r\n};\r\n\r\nexport  function ReduxProduct(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"API_CALL_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      };\r\n\r\n    case GET_NUMBER_CART:\r\n      return {\r\n        ...state,\r\n      };\r\n      case ADD_CART: if (state.numberCart == 0) {\r\n        let cart = {\r\n          name: action.payload.productId,\r\n         \r\n        };\r\n        state.Carts.push(cart);\r\n        console.log(state.Carts)\r\n        return {\r\n              ...state,\r\n              numberCart: state.numberCart + 1,\r\n            };\r\n      } \r\n    // case ADD_CART:\r\n    //   if (state.numberCart == 0) {\r\n    //     let cart = {\r\n    //       id: action.payload.id,\r\n    //       quantity: 1,\r\n    //       name: action.payload.name,\r\n    //       image: action.payload.image,\r\n    //       price: action.payload.price,\r\n    //     };\r\n    //     state.Carts.push(cart);\r\n    //   } else {\r\n    //     let check = false;\r\n    //     state.Carts.map((item, key) => {\r\n    //       if (item.id == action.payload.id) {\r\n    //         state.Carts[key].quantity++;\r\n    //         check = true;\r\n    //       }\r\n    //     });\r\n    //     if (!check) {\r\n    //       let _cart = {\r\n    //         id: action.payload.id,\r\n    //         quantity: 1,\r\n    //         name: action.payload.name,\r\n    //         image: action.payload.image,\r\n    //         price: action.payload.price,\r\n    //       };\r\n    //       state.Carts.push(_cart);\r\n    //     }\r\n    //   }\r\n    //   return {\r\n    //     ...state,\r\n    //     numberCart: state.numberCart + 1,\r\n    //   };\r\n   \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n"],"mappings":"AAAA,SACEA,eAAe,EACfC,QAAQ,QACH,oBAAoB;AAC3B,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAG;AACV,CAAC;AAED,OAAQ,SAASC,YAAY,GAA+B;EAAA,IAA9BC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM;EACxD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,kBAAkB;MACrB,OAAO;QACL,GAAGF,KAAK;QACRL,IAAI,EAAEM,MAAM,CAACE;MACf,CAAC;IAEH,KAAKX,eAAe;MAClB,OAAO;QACL,GAAGQ;MACL,CAAC;IACD,KAAKP,QAAQ;MAAE,IAAIO,KAAK,CAACJ,UAAU,IAAI,CAAC,EAAE;QACxC,IAAIQ,IAAI,GAAG;UACTC,IAAI,EAAEJ,MAAM,CAACE,OAAO,CAACG;QAEvB,CAAC;QACDN,KAAK,CAACH,KAAK,CAACU,IAAI,CAACH,IAAI,CAAC;QACtBI,OAAO,CAACC,GAAG,CAACT,KAAK,CAACH,KAAK,CAAC;QACxB,OAAO;UACD,GAAGG,KAAK;UACRJ,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;QACjC,CAAC;MACP;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;MACE,OAAOI,KAAK;EAAC;AAEnB;AAAC,KA7DgBD,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}