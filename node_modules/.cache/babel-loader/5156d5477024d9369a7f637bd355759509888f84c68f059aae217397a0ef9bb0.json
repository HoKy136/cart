{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nimport GetImg from '../../Img/shoppingcart-136-default-rtdb-export.json';\nconst colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\nconst delay = 2500;\nfunction SlideShow() {\n  //    const getUrl = GetImg.Products.map(item =>{\n  //     return item.imageUrl\n  //    })\n  //    const [index , setIndex] = useState(0);\n  //    const timeoutRef = useRef(null);\n  //    function resetTimeout() {\n  //     if (timeoutRef.current) {\n  //       clearTimeout(timeoutRef.current);\n  //     }\n  //   }\n  //   useEffect(() => {\n  //     resetTimeout();\n  //     timeoutRef.current = setTimeout(() =>\n  //         setIndex((prevIndex) =>\n  //           prevIndex === getUrl.length - 1 ? 0 : prevIndex + 1\n  //         ),\n  //       2000\n  //     );\n\n  //     return () => {\n  //       resetTimeout();\n  //     };\n  //   }, [index]);\n  //     return ( \n  //         <div className=\"slideshow\">\n  //         <div\n  //           className=\"slideshowSlider\"\n  //           style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }}\n  //         >\n  //           { GetImg.Products.map((images, index) => (\n  //             <div\n  //               className=\"slide\"\n  //               key={index}\n\n  //             ><img src={images.imageUrl}/></div>\n  //           ))}\n  //         </div>\n\n  //         <div className=\"slideshowDots\">\n  //           { GetImg.Products.map((_, idx) => (\n  //             <div\n  //               key={idx}\n  //               className={`slideshowDot${index === idx ? \" active\" : \"\"}`}\n  //               onClick={() => {\n  //                 setIndex(idx);\n  //               }}\n  //             ></div>\n  //           ))}\n  //         </div>\n  //       </div>\n  //         );\n}\n_c = SlideShow;\nexport default SlideShow;\n// function Slideshow() {\n//     const [index, setIndex] = React.useState(0);\n//     const timeoutRef = React.useRef(null);\n\n//     function resetTimeout() {\n//       if (timeoutRef.current) {\n//         clearTimeout(timeoutRef.current);\n//       }\n//     }\n\n//     React.useEffect(() => {\n//       resetTimeout();\n//       timeoutRef.current = setTimeout(\n//         () =>\n//           setIndex((prevIndex) =>\n//             prevIndex === colors.length - 1 ? 0 : prevIndex + 1\n//           ),\n//         delay\n//       );\n\n//       return () => {\n//         resetTimeout();\n//       };\n//     }, [index]);\n\n//     return (\n//       <div className=\"slideshow\">\n//         <div\n//           className=\"slideshowSlider\"\n//           style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }}\n//         >\n//           {colors.map((backgroundColor, index) => (\n//             <div\n//               className=\"slide\"\n//               key={index}\n//               style={{ backgroundColor }}\n//             ></div>\n//           ))}\n//         </div>\n\n//         <div className=\"slideshowDots\">\n//           {colors.map((_, idx) => (\n//             <div\n//               key={idx}\n//               className={`slideshowDot${index === idx ? \" active\" : \"\"}`}\n//               onClick={() => {\n//                 setIndex(idx);\n//               }}\n//             ></div>\n//           ))}\n//         </div>\n//       </div>\n//     );\n//   }\nvar _c;\n$RefreshReg$(_c, \"SlideShow\");","map":{"version":3,"names":["useEffect","useRef","useState","GetImg","colors","delay","SlideShow"],"sources":["D:/Hoc/Workspace/Frontend/MockProject/ShoppingCart/cart/src/Component/Slide/Slide.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport GetImg from '../../Img/shoppingcart-136-default-rtdb-export.json'\r\nconst colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\r\nconst delay = 2500;\r\nfunction SlideShow() {\r\n//    const getUrl = GetImg.Products.map(item =>{\r\n//     return item.imageUrl\r\n//    })\r\n//    const [index , setIndex] = useState(0);\r\n//    const timeoutRef = useRef(null);\r\n//    function resetTimeout() {\r\n//     if (timeoutRef.current) {\r\n//       clearTimeout(timeoutRef.current);\r\n//     }\r\n//   }\r\n//   useEffect(() => {\r\n//     resetTimeout();\r\n//     timeoutRef.current = setTimeout(() =>\r\n//         setIndex((prevIndex) =>\r\n//           prevIndex === getUrl.length - 1 ? 0 : prevIndex + 1\r\n//         ),\r\n//       2000\r\n//     );\r\n\r\n//     return () => {\r\n//       resetTimeout();\r\n//     };\r\n//   }, [index]);\r\n//     return ( \r\n//         <div className=\"slideshow\">\r\n//         <div\r\n//           className=\"slideshowSlider\"\r\n//           style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }}\r\n//         >\r\n//           { GetImg.Products.map((images, index) => (\r\n//             <div\r\n//               className=\"slide\"\r\n//               key={index}\r\n              \r\n//             ><img src={images.imageUrl}/></div>\r\n//           ))}\r\n//         </div>\r\n  \r\n//         <div className=\"slideshowDots\">\r\n//           { GetImg.Products.map((_, idx) => (\r\n//             <div\r\n//               key={idx}\r\n//               className={`slideshowDot${index === idx ? \" active\" : \"\"}`}\r\n//               onClick={() => {\r\n//                 setIndex(idx);\r\n//               }}\r\n//             ></div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//         );\r\n}\r\n\r\nexport default SlideShow;\r\n// function Slideshow() {\r\n//     const [index, setIndex] = React.useState(0);\r\n//     const timeoutRef = React.useRef(null);\r\n  \r\n//     function resetTimeout() {\r\n//       if (timeoutRef.current) {\r\n//         clearTimeout(timeoutRef.current);\r\n//       }\r\n//     }\r\n  \r\n//     React.useEffect(() => {\r\n//       resetTimeout();\r\n//       timeoutRef.current = setTimeout(\r\n//         () =>\r\n//           setIndex((prevIndex) =>\r\n//             prevIndex === colors.length - 1 ? 0 : prevIndex + 1\r\n//           ),\r\n//         delay\r\n//       );\r\n  \r\n//       return () => {\r\n//         resetTimeout();\r\n//       };\r\n//     }, [index]);\r\n  \r\n//     return (\r\n//       <div className=\"slideshow\">\r\n//         <div\r\n//           className=\"slideshowSlider\"\r\n//           style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }}\r\n//         >\r\n//           {colors.map((backgroundColor, index) => (\r\n//             <div\r\n//               className=\"slide\"\r\n//               key={index}\r\n//               style={{ backgroundColor }}\r\n//             ></div>\r\n//           ))}\r\n//         </div>\r\n  \r\n//         <div className=\"slideshowDots\">\r\n//           {colors.map((_, idx) => (\r\n//             <div\r\n//               key={idx}\r\n//               className={`slideshowDot${index === idx ? \" active\" : \"\"}`}\r\n//               onClick={() => {\r\n//                 setIndex(idx);\r\n//               }}\r\n//             ></div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,MAAM,MAAM,qDAAqD;AACxE,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAChD,MAAMC,KAAK,GAAG,IAAI;AAClB,SAASC,SAAS,GAAG;EACrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA;AACC,KApDQA,SAAS;AAsDlB,eAAeA,SAAS;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}