{"ast":null,"code":"import { act } from \"react-dom/test-utils\";\nimport { GET_NUMBER_CART, ADD_CART } from \"../Actions/Actions\";\nconst initialState = {\n  data: [],\n  numberCart: 0,\n  Carts: [],\n  count: 1\n};\nexport function ReduxProduct() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"API_CALL_SUCCESS\":\n      return {\n        ...state,\n        data: action.payload\n      };\n    case GET_NUMBER_CART:\n      return {\n        ...state\n      };\n    case ADD_CART:\n      console.log(payload);\n      if (state.numberCart == 0) {\n        let cart = {\n          id: action.productId,\n          quantity: 1,\n          name: action.productName,\n          image: action.imageUrl,\n          price: action.price\n        };\n        state.Carts.push(cart);\n        console.log(state.Carts);\n      } else {\n        let check = false;\n        state.Carts.map((item, key) => {\n          if (item.id == action.id) {\n            state.Carts[key].quantity++;\n            check = true;\n          }\n        });\n        if (!check) {\n          let _cart = {\n            id: action.id,\n            quantity: 1,\n            name: action.name,\n            image: action.image,\n            price: action.price\n          };\n          state.Carts.push(_cart);\n        }\n      }\n      return {\n        ...state,\n        numberCart: state.numberCart + 1\n      };\n    default:\n      return state;\n  }\n}\n_c = ReduxProduct;\nvar _c;\n$RefreshReg$(_c, \"ReduxProduct\");","map":{"version":3,"names":["act","GET_NUMBER_CART","ADD_CART","initialState","data","numberCart","Carts","count","ReduxProduct","state","action","type","payload","console","log","cart","id","productId","quantity","name","productName","image","imageUrl","price","push","check","map","item","key","_cart"],"sources":["D:/Hoc/Workspace/Frontend/MockProject/ShoppingCart/cart/src/db/Redux/Reducers/ReduxProduct.js"],"sourcesContent":["import { act } from \"react-dom/test-utils\";\r\nimport {\r\n  GET_NUMBER_CART,\r\n  ADD_CART,\r\n} from \"../Actions/Actions\";\r\nconst initialState = {\r\n  data: [],\r\n  numberCart: 0,\r\n  Carts: [],\r\n  count : 1,\r\n};\r\n\r\nexport  function ReduxProduct(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"API_CALL_SUCCESS\":\r\n     \r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      };\r\n\r\n    case GET_NUMBER_CART:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case ADD_CART:\r\n      console.log(payload)\r\n      if (state.numberCart == 0) {\r\n        let cart = {\r\n          id: action.productId,\r\n          quantity: 1,\r\n          name: action.productName,\r\n          image: action.imageUrl,\r\n          price: action.price,\r\n        };\r\n        state.Carts.push(cart);\r\n        console.log(state.Carts)\r\n      } else {\r\n        let check = false;\r\n        state.Carts.map((item, key) => {\r\n          if (item.id == action.id) {\r\n            state.Carts[key].quantity++;\r\n            check = true;\r\n          }\r\n        });\r\n        if (!check) {\r\n          let _cart = {\r\n            id: action.id,\r\n            quantity: 1,\r\n            name: action.name,\r\n            image: action.image,\r\n            price: action.price,\r\n          };\r\n          state.Carts.push(_cart);\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        numberCart: state.numberCart + 1,\r\n      };\r\n   \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,sBAAsB;AAC1C,SACEC,eAAe,EACfC,QAAQ,QACH,oBAAoB;AAC3B,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAG;AACV,CAAC;AAED,OAAQ,SAASC,YAAY,GAA+B;EAAA,IAA9BC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM;EACxD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,kBAAkB;MAErB,OAAO;QACL,GAAGF,KAAK;QACRL,IAAI,EAAEM,MAAM,CAACE;MACf,CAAC;IAEH,KAAKX,eAAe;MAClB,OAAO;QACL,GAAGQ;MACL,CAAC;IAEH,KAAKP,QAAQ;MACXW,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;MACpB,IAAIH,KAAK,CAACJ,UAAU,IAAI,CAAC,EAAE;QACzB,IAAIU,IAAI,GAAG;UACTC,EAAE,EAAEN,MAAM,CAACO,SAAS;UACpBC,QAAQ,EAAE,CAAC;UACXC,IAAI,EAAET,MAAM,CAACU,WAAW;UACxBC,KAAK,EAAEX,MAAM,CAACY,QAAQ;UACtBC,KAAK,EAAEb,MAAM,CAACa;QAChB,CAAC;QACDd,KAAK,CAACH,KAAK,CAACkB,IAAI,CAACT,IAAI,CAAC;QACtBF,OAAO,CAACC,GAAG,CAACL,KAAK,CAACH,KAAK,CAAC;MAC1B,CAAC,MAAM;QACL,IAAImB,KAAK,GAAG,KAAK;QACjBhB,KAAK,CAACH,KAAK,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;UAC7B,IAAID,IAAI,CAACX,EAAE,IAAIN,MAAM,CAACM,EAAE,EAAE;YACxBP,KAAK,CAACH,KAAK,CAACsB,GAAG,CAAC,CAACV,QAAQ,EAAE;YAC3BO,KAAK,GAAG,IAAI;UACd;QACF,CAAC,CAAC;QACF,IAAI,CAACA,KAAK,EAAE;UACV,IAAII,KAAK,GAAG;YACVb,EAAE,EAAEN,MAAM,CAACM,EAAE;YACbE,QAAQ,EAAE,CAAC;YACXC,IAAI,EAAET,MAAM,CAACS,IAAI;YACjBE,KAAK,EAAEX,MAAM,CAACW,KAAK;YACnBE,KAAK,EAAEb,MAAM,CAACa;UAChB,CAAC;UACDd,KAAK,CAACH,KAAK,CAACkB,IAAI,CAACK,KAAK,CAAC;QACzB;MACF;MACA,OAAO;QACL,GAAGpB,KAAK;QACRJ,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;MACjC,CAAC;IAEH;MACE,OAAOI,KAAK;EAAC;AAEnB;AAAC,KArDgBD,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}