{"ast":null,"code":"import { GET_NUMBER_CART, ADD_CART, DELETE_CART } from \"../Actions/Actions\";\nconst initialState = {\n  data: [],\n  numberCart: 0,\n  Carts: [],\n  count: 1\n};\nexport function ReduxProduct() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      const {\n        product,\n        quantity\n      } = action.payload;\n      product.quantity = quantity;\n      return {\n        ...state,\n        Carts: [...state.Carts, product]\n      };\n    case \"API_CALL_SUCCESS\":\n      return {\n        ...state,\n        data: action.payload\n      };\n    case 'INCRE':\n      const proCheckoutInc = action.payload.proCheckoutInc;\n      return {\n        ...state,\n        Carts: state.Carts.map(item => item.productId === proCheckoutInc.productId ? {\n          ...item,\n          quantity: proCheckoutInc.quantity + 1\n        } : item)\n      };\n    case 'DECRE':\n      const proCheckoutDec = action.payload.proCheckoutDec;\n      return {\n        ...state,\n        Carts: state.Carts.map(item => item.productId === proCheckoutDec.productId ? {\n          ...item,\n          quantity: proCheckoutDec.quantity - 1\n        } : item)\n      };\n    case DELETE_CART:\n      return {\n        ...state,\n        Carts: state.Carts.filter(item => {\n          return item.productId !== action.payload;\n        })\n        // case GET_NUMBER_CART:\n        //   return {\n        //     ...state,\n        //   };\n\n        // case ADD_CART:\n        //   if (state.numberCart === 0) {\n        //     let cart = {\n        //       id: action.payload.productId,\n        //       quantity: state.count,\n        //       name: action.payload.productName,\n        //       image: action.payload.imageUrl,\n        //       price: action.payload.price,\n        //       description : action.payload.description,\n        //       totalPrice : action.payload.price * state.count \n        //     };\n        //     state.Carts.push(cart);\n        //   } else {\n        //     let check = false;\n        //     state.Carts.map((item, key) => {\n        //       if (item.id === action.payload.productId) {\n        //         state.Carts[key].quantity++;\n        //         check = true;\n        //       }\n        //     });\n        //     if (!check) {\n        //       let _cart = {\n        //         id: action.payload.productId,\n        //       quantity: state.count,\n        //       name: action.payload.productName,\n        //       image: action.payload.imageUrl,\n        //       price: action.payload.price,\n        //       description : action.payload.description,\n        //       totalPrice : action.payload.price * state.count \n        //       };\n        //       state.Carts.push(_cart);\n        //     }\n        //   }\n        //   return {\n        //     ...state,\n        //     numberCart: state.numberCart + 1,\n        //   };\n      };\n\n    default:\n      return state;\n  }\n}\n_c = ReduxProduct;\nvar _c;\n$RefreshReg$(_c, \"ReduxProduct\");","map":{"version":3,"names":["GET_NUMBER_CART","ADD_CART","DELETE_CART","initialState","data","numberCart","Carts","count","ReduxProduct","state","action","type","product","quantity","payload","proCheckoutInc","map","item","productId","proCheckoutDec","filter"],"sources":["D:/Hoc/Workspace/Frontend/MockProject/ShoppingCart/cart/src/db/Redux/Reducers/ReduxProduct.js"],"sourcesContent":["import {\r\n  GET_NUMBER_CART,\r\n  ADD_CART,\r\n  DELETE_CART\r\n} from \"../Actions/Actions\";\r\nconst initialState = {\r\n  data: [],\r\n  numberCart: 0,\r\n  Carts: [],\r\n  count : 1,\r\n};\r\n\r\nexport  function ReduxProduct(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"ADD_TO_CART\": \r\n      const { product, quantity } = action.payload;\r\n      product.quantity = quantity\r\n      return {\r\n        ...state,\r\n        Carts: [...state.Carts, product]\r\n      }\r\n\r\n    case \"API_CALL_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      };\r\n    case 'INCRE':\r\n      const proCheckoutInc = action.payload.proCheckoutInc\r\n      return {\r\n        ...state,\r\n        Carts: state.Carts.map(item => \r\n          item.productId === proCheckoutInc.productId ? { ...item, quantity: proCheckoutInc.quantity + 1 } : item)\r\n      }\r\n      \r\n    case 'DECRE':\r\n      const proCheckoutDec = action.payload.proCheckoutDec\r\n      return {\r\n        ...state,\r\n        Carts: state.Carts.map(item => \r\n          item.productId === proCheckoutDec.productId ? { ...item, quantity: proCheckoutDec.quantity - 1 } : item)\r\n      }\r\n\r\n        case DELETE_CART:\r\n        return{\r\n        ...state,\r\n        Carts: state.Carts.filter(item=>{\r\n            return item.productId !== action.payload\r\n        })\r\n    // case GET_NUMBER_CART:\r\n    //   return {\r\n    //     ...state,\r\n    //   };\r\n\r\n    // case ADD_CART:\r\n    //   if (state.numberCart === 0) {\r\n    //     let cart = {\r\n    //       id: action.payload.productId,\r\n    //       quantity: state.count,\r\n    //       name: action.payload.productName,\r\n    //       image: action.payload.imageUrl,\r\n    //       price: action.payload.price,\r\n    //       description : action.payload.description,\r\n    //       totalPrice : action.payload.price * state.count \r\n    //     };\r\n    //     state.Carts.push(cart);\r\n    //   } else {\r\n    //     let check = false;\r\n    //     state.Carts.map((item, key) => {\r\n    //       if (item.id === action.payload.productId) {\r\n    //         state.Carts[key].quantity++;\r\n    //         check = true;\r\n    //       }\r\n    //     });\r\n    //     if (!check) {\r\n    //       let _cart = {\r\n    //         id: action.payload.productId,\r\n    //       quantity: state.count,\r\n    //       name: action.payload.productName,\r\n    //       image: action.payload.imageUrl,\r\n    //       price: action.payload.price,\r\n    //       description : action.payload.description,\r\n    //       totalPrice : action.payload.price * state.count \r\n    //       };\r\n    //       state.Carts.push(_cart);\r\n    //     }\r\n    //   }\r\n    //   return {\r\n    //     ...state,\r\n    //     numberCart: state.numberCart + 1,\r\n    //   };\r\n      \r\n}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n"],"mappings":"AAAA,SACEA,eAAe,EACfC,QAAQ,EACRC,WAAW,QACN,oBAAoB;AAC3B,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAG;AACV,CAAC;AAED,OAAQ,SAASC,YAAY,GAA+B;EAAA,IAA9BC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM;EACxD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,MAAM;QAAEC,OAAO;QAAEC;MAAS,CAAC,GAAGH,MAAM,CAACI,OAAO;MAC5CF,OAAO,CAACC,QAAQ,GAAGA,QAAQ;MAC3B,OAAO;QACL,GAAGJ,KAAK;QACRH,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAK,EAAEM,OAAO;MACjC,CAAC;IAEH,KAAK,kBAAkB;MACrB,OAAO;QACL,GAAGH,KAAK;QACRL,IAAI,EAAEM,MAAM,CAACI;MACf,CAAC;IACH,KAAK,OAAO;MACV,MAAMC,cAAc,GAAGL,MAAM,CAACI,OAAO,CAACC,cAAc;MACpD,OAAO;QACL,GAAGN,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACU,GAAG,CAACC,IAAI,IACzBA,IAAI,CAACC,SAAS,KAAKH,cAAc,CAACG,SAAS,GAAG;UAAE,GAAGD,IAAI;UAAEJ,QAAQ,EAAEE,cAAc,CAACF,QAAQ,GAAG;QAAE,CAAC,GAAGI,IAAI;MAC3G,CAAC;IAEH,KAAK,OAAO;MACV,MAAME,cAAc,GAAGT,MAAM,CAACI,OAAO,CAACK,cAAc;MACpD,OAAO;QACL,GAAGV,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACU,GAAG,CAACC,IAAI,IACzBA,IAAI,CAACC,SAAS,KAAKC,cAAc,CAACD,SAAS,GAAG;UAAE,GAAGD,IAAI;UAAEJ,QAAQ,EAAEM,cAAc,CAACN,QAAQ,GAAG;QAAE,CAAC,GAAGI,IAAI;MAC3G,CAAC;IAEC,KAAKf,WAAW;MAChB,OAAM;QACN,GAAGO,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACc,MAAM,CAACH,IAAI,IAAE;UAC5B,OAAOA,IAAI,CAACC,SAAS,KAAKR,MAAM,CAACI,OAAO;QAC5C,CAAC;QACL;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MAEJ,CAAC;;IACG;MACE,OAAOL,KAAK;EAAC;AAEnB;AAAC,KApFgBD,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}